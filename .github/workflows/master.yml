name: CI

# Controls when the action will run. Triggers the workflow on push or pull request

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  notif_debut:
    runs-on: rp
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: ThisIsMyUsername # Optional. (defaults to webhook app)
          SLACK_CHANNEL: general # Optional. (defaults to webhook)
          SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
        uses: Ilshidur/action-slack@master
        with:
          args: "Début d'une livraison (auteur ${{GITHUB_ACTOR}} déclenché par ${{GITHUB_EVENT_NAME}})" # Optional
  # This workflow contains a single job called "build"
  test_unitaires:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: rp
    steps:
      - uses: actions/checkout@v2

      - name: Resume des infos
        run: |
          echo "Lancement des tests unitaires"
          echo "Répertoire de travail : ${GITHUB_WORKSPACE}"

      - name: lance les tests unitaires
        run: |
          cd ${GITHUB_WORKSPACE}/
          docker-compose -f docker-compose-tu.yml pull
          docker-compose -f docker-compose-tu.yml up -d
          echo "Wait for postgres to be up"
          docker exec webtu /home/delain/delain/web/tests/wait.sh
          echo 'PHP Unit tests'
          ${GITHUB_WORKSPACE}/web/tests/phpunit_docker-tu.sh
  notif_fin:
    runs-on: rp
    # test
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: ThisIsMyUsername # Optional. (defaults to webhook app)
          SLACK_CHANNEL: general # Optional. (defaults to webhook)
          SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
        uses: Ilshidur/action-slack@master
        with:
          args: "Fin de livraison (auteur ${{GITHUB_ACTOR}} déclenché par ${{GITHUB_EVENT_NAME}})" # Optional



  #livraison:
  #  runs-on: backenddelain
  #  steps:
  #    - name: git pull
  #      run : |
  #        cd /home/delain/delain
  #        git pull
  #    - name: empty cache
  #      run: 'rm -rf /home/delain/delain/cache/*'
  #    - name: Livraisons sql
  #      run: /home/delain/delain/shell/livraisons.sh
  #    - name: Generation des docs api
  #      run: /usr/bin/apidoc -i /home/delain/delain/web/www/api/v2 -o /home/delain/delain/web/www/api/doc